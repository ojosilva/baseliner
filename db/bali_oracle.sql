ALTER TABLE BALI_JOB
 DROP PRIMARY KEY CASCADE;
DROP TABLE BALI_JOB CASCADE CONSTRAINTS;

CREATE TABLE BALI_JOB
(
  ID            NUMBER                          NOT NULL,
  NAME          VARCHAR2(45 BYTE)               NOT NULL,
  STARTTIME     DATE                            DEFAULT SYSDATE               NOT NULL,
  MAXSTARTTIME  DATE                            DEFAULT SYSDATE+1             NOT NULL,
  ENDTIME       DATE,
  STATUS        VARCHAR2(45 BYTE)               DEFAULT 'WAITING'             NOT NULL,
  NS            VARCHAR2(45 BYTE)               DEFAULT '/'                   NOT NULL,
  BL            VARCHAR2(45 BYTE)               DEFAULT '*'                   NOT NULL
);


ALTER TABLE BALI_CONFIG
 DROP PRIMARY KEY CASCADE;
DROP TABLE BALI_CONFIG CASCADE CONSTRAINTS;

CREATE TABLE BALI_CONFIG
(
  ID         NUMBER                             NOT NULL,
  NS         VARCHAR2(1000 BYTE)                DEFAULT '/'                   NOT NULL,
  BL         VARCHAR2(100 BYTE)                 DEFAULT '*'                   NOT NULL,
  KEY        VARCHAR2(100 BYTE)                 NOT NULL,
  VALUE      VARCHAR2(100 BYTE)                 DEFAULT NULL,
  TS         DATE                               DEFAULT SYSDATE               NOT NULL,
  REF        NUMBER,
  REFTABLE   VARCHAR2(100 BYTE),
  DATA       BLOB,
  PARENT_ID  NUMBER                             DEFAULT 0                     NOT NULL
);


ALTER TABLE BALI_RELEASE
 DROP PRIMARY KEY CASCADE;
DROP TABLE BALI_RELEASE CASCADE CONSTRAINTS;

CREATE TABLE BALI_RELEASE
(
  ID           NUMBER                           NOT NULL,
  NAME         VARCHAR2(255 BYTE)               NOT NULL,
  DESCRIPTION  VARCHAR2(2000 BYTE),
  ACTIVE       CHAR(1 BYTE)                     DEFAULT 1                     NOT NULL
);


ALTER TABLE BALI_CHAIN
 DROP PRIMARY KEY CASCADE;
DROP TABLE BALI_CHAIN CASCADE CONSTRAINTS;

CREATE TABLE BALI_CHAIN
(
  ID           INTEGER                          NOT NULL,
  NAME         VARCHAR2(255 BYTE)               NOT NULL,
  DESCRIPTION  VARCHAR2(2000 BYTE)              NOT NULL
);


ALTER TABLE BALI_CHAINED_SERVICE
 DROP PRIMARY KEY CASCADE;
DROP TABLE BALI_CHAINED_SERVICE CASCADE CONSTRAINTS;

CREATE TABLE BALI_CHAINED_SERVICE
(
  ID           NUMBER                           NOT NULL,
  CHAIN_ID     NUMBER                           NOT NULL,
  SEQ          NUMBER                           NOT NULL,
  KEY          VARCHAR2(255 BYTE)               NOT NULL,
  DESCRIPTION  VARCHAR2(2000 BYTE)
);


DROP TABLE BALI_RELATIONSHIP CASCADE CONSTRAINTS;

CREATE TABLE BALI_RELATIONSHIP
(
  FROM_ID  NUMBER                               NOT NULL,
  TO_ID    NUMBER                               NOT NULL,
  TYPE     VARCHAR2(45 BYTE)
);


ALTER TABLE BALI_LOG
 DROP PRIMARY KEY CASCADE;
DROP TABLE BALI_LOG CASCADE CONSTRAINTS;

CREATE TABLE BALI_LOG
(
  ID       NUMBER                               NOT NULL,
  TEXT     VARCHAR2(1000 BYTE),
  LEV      VARCHAR2(10 BYTE),
  JOB_ID   NUMBER                               NOT NULL,
  MORE     VARCHAR2(10 BYTE),
  DATA     BLOB,
  WIKI_ID  NUMBER
);


ALTER TABLE BALI_JOB ADD (
  PRIMARY KEY
 (ID));


ALTER TABLE BALI_CONFIG ADD (
  PRIMARY KEY
 (ID));


ALTER TABLE BALI_RELEASE ADD (
  PRIMARY KEY
 (ID));


ALTER TABLE BALI_CHAIN ADD (
  PRIMARY KEY
 (ID));


ALTER TABLE BALI_CHAINED_SERVICE ADD (
  PRIMARY KEY
 (ID));


ALTER TABLE BALI_LOG ADD (
  PRIMARY KEY
 (ID));


ALTER TABLE BALI_CHAINED_SERVICE ADD (
  CONSTRAINT BALI_CHAINED_SERVICE_R01 
 FOREIGN KEY (CHAIN_ID) 
 REFERENCES BALI_CHAIN (ID)
    ON DELETE CASCADE);


ALTER TABLE BALI_RELATIONSHIP ADD (
  CONSTRAINT BALI_RELATIONSHIP_R01 
 FOREIGN KEY (FROM_ID) 
 REFERENCES BALI_CONFIG (ID)
    ON DELETE CASCADE);

ALTER TABLE BALI_RELATIONSHIP ADD (
  CONSTRAINT BALI_RELATIONSHIP_R02 
 FOREIGN KEY (TO_ID) 
 REFERENCES BALI_CONFIG (ID)
    ON DELETE CASCADE);


ALTER TABLE BALI_LOG ADD (
  CONSTRAINT BALI_LOG_R01 
 FOREIGN KEY (JOB_ID) 
 REFERENCES BALI_JOB (ID)
    ON DELETE CASCADE);



DROP SEQUENCE BALI_CONFIG_SEQ;
CREATE SEQUENCE BALI_CONFIG_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE NOORDER;
DROP SEQUENCE BALI_CHAIN_SEQ;
CREATE SEQUENCE BALI_CHAIN_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE NOORDER;
DROP SEQUENCE BALI_JOB_SEQ;
CREATE SEQUENCE BALI_JOB_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE NOORDER;
DROP SEQUENCE BALI_LOG_SEQ;
CREATE SEQUENCE BALI_LOG_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE NOORDER;
DROP SEQUENCE BALI_CHAINED_SERVICE_SEQ;
CREATE SEQUENCE BALI_CHAINED_SERVICE_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE NOORDER;
DROP SEQUENCE BALI_RELEASE_SEQ;
CREATE SEQUENCE BALI_RELEASE_SEQ INCREMENT BY 1 START WITH 1 NOCYCLE NOCACHE NOORDER;


CREATE OR REPLACE TRIGGER BALI_CONFIG_ID
BEFORE INSERT ON BALI_CONFIG
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
   SELECT BALI_CONFIG_SEQ.NEXTVAL INTO :NEW.ID FROM dual;
END;
/



/
CREATE OR REPLACE TRIGGER BALI_JOB_ID
BEFORE INSERT ON BALI_JOB
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
   SELECT BALI_JOB_SEQ.NEXTVAL INTO :NEW.ID FROM dual;
END;
/



/
CREATE OR REPLACE TRIGGER BALI_CHAINED_SERVICE_ID
BEFORE INSERT ON BALI_CHAINED_SERVICE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
   SELECT BALI_CHAINED_SERVICE_SEQ.NEXTVAL INTO :NEW.ID FROM dual;
END;
/



/
CREATE OR REPLACE TRIGGER BALI_LOG_ID
BEFORE INSERT ON BALI_LOG
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
   SELECT BALI_LOG_SEQ.NEXTVAL INTO :NEW.ID FROM dual;
END;
/



/
CREATE OR REPLACE TRIGGER BALI_CHAIN_ID
BEFORE INSERT ON BALI_CHAIN
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
   SELECT BALI_CHAIN_SEQ.NEXTVAL INTO :NEW.ID FROM dual;
END;
/



/
CREATE OR REPLACE TRIGGER BALI_RELEASE_ID
BEFORE INSERT ON BALI_RELEASE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
   SELECT BALI_RELEASE_SEQ.NEXTVAL INTO :NEW.ID FROM dual;
END;
/



/

